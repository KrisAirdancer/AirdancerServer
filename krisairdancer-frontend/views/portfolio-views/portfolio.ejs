<title>Airdancer Pi</title>
<!-- TODO: Fix favicon -->
<link rel="shortcut icon" href="../../public/wind-icon.png" type="image/png">
<body>
    <main>
        <div id="outer-div">
            <div id="content-div">
                <p> ██████╗███╗   ███╗ ╦╔═╦═╗╦╔═╗╔═╗╦╦═╗╔╦╗╔═╗╔╗╔╔═╗╔═╗╦═╗<br>██╔════╝████╗ ████║ ╠╩╗╠╦╝║╚═╗╠═╣║╠╦╝ ║║╠═╣║║║║  ║╣ ╠╦╝<br>██║     ██╔████╔██║ ╩ ╩╩╚═╩╚═╝╩ ╩╩╩╚══╩╝╩ ╩╝╚╝╚═╝╚═╝╩╚═<br>██║     ██║╚██╔╝██║ The Portfolio of Chris Marston<br>╚██████╗██║ ╚═╝ ██║ v0.2.0<br> ╚═════╝╚═╝     ╚═╝</p>
                <h2>Projects</h2>
                <p><a href="https://krisairdancer.github.io/6630-lego-set-visualizer/index.html">Final Project</a> for CS 5630: Visualization for Data Science</p>
                <h2>About</h2>
                <p>TODO</p>
                <h2>Resume</h2>
                <p>TODO: Add link to LinkedIn, GitHub, and a copy of my resume (the PDF)</p>
                <button type="button" class="collapsible-button">View resume</button>
                <div class="collapsible-content">
                    <object data="http://localhost:11001/chris-marston-resume.pdf" id="resume-pdf"></object>
                </div>
                <h2>Contact</h2>
                <p>TODO: LinkedIn link</p>
            </div>
        </div>
    </main>
</body>
<style>
    :root {
        --blue: #122D4A;
        --orange: #FFA366;

        /* --blue: #184674;
        --orange: #D28140; */
        
        /* --blue: #DCD7D5; */

        /* --blue: #5a6c7d;
        --orange: #5b2a04; */
    }

    body {
        background-color: var(--blue);
        margin: 0px;
        font-family:'Courier New', Courier, monospace;
        overflow-y: hidden;
    }

    #outer-div {
        background-color: var(--blue);
        align-items: center;
        justify-content: center;
        height: 100%;
        padding: 10px;
        box-sizing: border-box; /* This line is the one that keeps the inner div from overflowing */
    }

    #content-div {
        width: 100%;
        height: 100%;
        border: 3px solid var(--orange);
        border-radius: 10px;
        background-color: var(--blue);
        color: var(--orange);
        box-sizing: border-box; /* This line is the one that keeps the inner div from overflowing */
        padding: 10px;
        overflow-y: scroll;
    }

    #content-div::-webkit-scrollbar {
        display: none;
    }

    /***** Collapsible Content Styles *****/

    .collapsible-button {
        color: var(--orange);
        background-color: var(--blue);
        border: 1px solid var(--orange);
        border-radius: 5px;
        cursor: pointer;
        width: 800px;
        margin: 5px 5px 5px 0px; /* Top Right Bottom Left */
    }

    .collapsible-button:hover {
        color: white;
        border-color: white;
    }

    /* Hide collapsible content when collapsed */
    .collapsible-content {
        display: flex;
        overflow: hidden;
        max-height: 0px;
        max-width: 800px;
        border-radius: 5px;
        justify-content: center;
        box-sizing: border-box;
        transition: max-height 1s;
    }
    
    .collapsible-content-active {
        border: 1px solid var(--orange);
    }

    .resume-content {
        /* TODO: Do I need this style? */
    }

    /* TODO: Do I need this style? */
    #resume-pdf {
        width: 800;
        height: 500;
    }

    /***** Text Styles *****/

    p {
        white-space: pre-wrap;
        margin: 0;
    }

    a:link {
        color: var(--orange);
        text-decoration: underline dotted;
    }

    a:visited {
        color: var(--orange);
        text-decoration: underline dotted;
    }

    a:hover {
        color: white;
    }
</style>
<script>
    document.querySelectorAll('.collapsible-button').forEach(collapsible => {
        collapsible.addEventListener('click', () => {
            let content = collapsible.nextElementSibling; // This retrieves the element immediately after the one this property is called on.
            
            if (content.classList.contains('collapsible-content-active')) // Collapse it
            {
                content.style.maxHeight = '0px';
                collapsible.textContent = 'View resume';
                setTimeout(() => {
                    content.classList.toggle('collapsible-content-active');
                }, 900);
            }
            else // Expand it
            {
                content.style.maxHeight = '400px';
                collapsible.textContent = 'Hide resume';
                content.classList.toggle('collapsible-content-active');
            }
        });
    });
</script>